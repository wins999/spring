<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven validator="validator" />
	<!-- Configuring Validators i.e. LocalValidatorFactoryBean -->
	<beans:bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	<context:component-scan 	base-package="com.lti.mvc.model" />
	<context:component-scan		base-package="com.lti.mvc.controller" />
	<context:component-scan		base-package="com.lti.mvc.dao" />
	<context:component-scan		base-package="com.lti.mvc.daoIml" />
	<context:component-scan		base-package="com.lti.mvc.service" />					
	<context:component-scan		base-package="com.lti.mvc.exception "/>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/webjars/**" location="/webjars/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- Spring Exception Handling with the help of SimpleMappingExceptionResolver -->
	<beans:bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="exceptionMappings">
			<beans:props>
				<beans:prop key="com.lti.mvc.exception.CustomException">
					ExceptionPage
				</beans:prop>
			</beans:props>
		</beans:property>
		<beans:property name="defaultErrorView" value="error" /><!-- 
			viewName for error page -->
	</beans:bean>


</beans:beans>
